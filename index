

<!DOCTYPE html>
<html lang="id">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Canva Power Class - SDN 2 Palapi</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    colors: {
                        'canva-purple': '#7B68EE',
                        'canva-blue': '#00C4CC',
                        'canva-pink': '#FF6B9D',
                        'canva-yellow': '#FFD23F',
                        'canva-green': '#00D084',
                        'canva-orange': '#FF7262'
                    },
                    animation: {
                        'fade-in': 'fadeIn 0.6s ease-in-out',
                        'slide-up': 'slideUp 0.8s ease-out',
                        'bounce-in': 'bounceIn 0.8s ease-out',
                        'float': 'float 3s ease-in-out infinite',
                        'pulse-slow': 'pulse 3s ease-in-out infinite'
                    },
                    keyframes: {
                        fadeIn: {
                            '0%': { opacity: '0' },
                            '100%': { opacity: '1' }
                        },
                        slideUp: {
                            '0%': { transform: 'translateY(30px)', opacity: '0' },
                            '100%': { transform: 'translateY(0)', opacity: '1' }
                        },
                        bounceIn: {
                            '0%': { transform: 'scale(0.3)', opacity: '0' },
                            '50%': { transform: 'scale(1.05)' },
                            '70%': { transform: 'scale(0.9)' },
                            '100%': { transform: 'scale(1)', opacity: '1' }
                        },
                        float: {
                            '0%, 100%': { transform: 'translateY(0px)' },
                            '50%': { transform: 'translateY(-10px)' }
                        }
                    }
                }
            }
        }
    </script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        .page-section {
            display: none;
        }
        .page-section.active {
            display: block;
            animation: fadeIn 0.6s ease-in-out;
        }
        .nav-link.active {
            color: #7B68EE;
            font-weight: 600;
        }
        .card-hover {
            transition: all 0.3s ease;
        }
        .card-hover:hover {
            transform: translateY(-5px);
            box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
        }
        .gradient-bg {
            background: linear-gradient(135deg, #7B68EE 0%, #00C4CC 25%, #FF6B9D 50%, #FFD23F 75%, #00D084 100%);
            background-size: 400% 400%;
            animation: gradientShift 8s ease infinite;
        }
        @keyframes gradientShift {
            0% { background-position: 0% 50%; }
            50% { background-position: 100% 50%; }
            100% { background-position: 0% 50%; }
        }
    </style>
</head>
<body class="gradient-bg min-h-screen">
    <!-- Navigation -->
    <nav class="bg-white shadow-lg sticky top-0 z-50">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="flex justify-between h-16">
                <div class="flex items-center">
                    <div class="flex-shrink-0">
                        <h1 class="text-xl font-bold text-canva-purple cursor-pointer" onclick="showPage('beranda')">Canva Power Class</h1>
                    </div>
                </div>
                <div class="hidden md:flex items-center space-x-8">
                    <a href="#" onclick="showPage('beranda')" class="nav-link text-gray-700 hover:text-canva-purple transition-colors active">Beranda</a>
                    <a href="#" onclick="showPage('materi')" class="nav-link text-gray-700 hover:text-canva-purple transition-colors">Materi</a>
                    <a href="#" onclick="showPage('daftar-hadir')" class="nav-link text-gray-700 hover:text-canva-purple transition-colors">Presensi</a>
                    <a href="#" onclick="showPage('dokumentasi')" class="nav-link text-gray-700 hover:text-canva-purple transition-colors">Dokumentasi</a>
                    <a href="#" onclick="showPage('proyek')" class="nav-link text-gray-700 hover:text-canva-purple transition-colors">Hasil Karya Peserta</a>
                    <a href="#" onclick="showPage('sertifikat')" class="nav-link text-gray-700 hover:text-canva-purple transition-colors">Unduh Sertifikat</a>
                </div>
                <div class="md:hidden flex items-center">
                    <button id="mobile-menu-btn" class="text-gray-700 hover:text-canva-purple">
                        <i class="fas fa-bars text-xl"></i>
                    </button>
                </div>
            </div>
        </div>
        <!-- Mobile Menu -->
        <div id="mobile-menu" class="hidden md:hidden bg-white border-t">
            <div class="px-2 pt-2 pb-3 space-y-1">
                <a href="#" onclick="showPage('beranda')" class="nav-link-mobile block px-3 py-2 text-gray-700 hover:text-canva-purple">Beranda</a>
                <a href="#" onclick="showPage('materi')" class="nav-link-mobile block px-3 py-2 text-gray-700 hover:text-canva-purple">Materi</a>
                <a href="#" onclick="showPage('daftar-hadir')" class="nav-link-mobile block px-3 py-2 text-gray-700 hover:text-canva-purple">Presensi</a>
                <a href="#" onclick="showPage('dokumentasi')" class="nav-link-mobile block px-3 py-2 text-gray-700 hover:text-canva-purple">Dokumentasi</a>
                <a href="#" onclick="showPage('proyek')" class="nav-link-mobile block px-3 py-2 text-gray-700 hover:text-canva-purple">Hasil Karya Peserta</a>
                <a href="#" onclick="showPage('sertifikat')" class="nav-link-mobile block px-3 py-2 text-gray-700 hover:text-canva-purple">Unduh Sertifikat</a>
            </div>
        </div>
    </nav>

    <!-- Beranda Page -->
    <div id="beranda" class="page-section active">
        <section class="py-20 px-4">
            <div class="max-w-6xl mx-auto text-center">
                <!-- Profile Image -->
                <div class="mb-8 animate-bounce-in">
                    <div class="w-32 h-32 rounded-full mx-auto shadow-2xl border-4 border-white animate-float overflow-hidden">
                        <img src="https://iili.io/F4bPiBf.png" alt="Profile Photo" class="w-full h-full object-cover">
                    </div>
                </div>
                
                <h1 class="text-5xl md:text-7xl font-bold text-white mb-4 animate-slide-up">
                    <span class="bg-gradient-to-r from-white to-gray-100 bg-clip-text text-transparent drop-shadow-lg">
                        Canva Power Class
                    </span>
                </h1>
                
                <p class="text-xl md:text-2xl text-white/90 mb-6 animate-slide-up" style="animation-delay: 0.2s;">
                    Workshop Canva dalam rangka Pekan Raya Canva 2025
                </p>
                
                <div class="flex flex-col md:flex-row items-center justify-center gap-4 mb-8 text-lg text-white/80 animate-slide-up" style="animation-delay: 0.4s;">
                    <div class="flex items-center gap-2 bg-white/20 backdrop-blur-sm px-4 py-2 rounded-full">
                        <i class="fas fa-calendar-alt text-canva-yellow"></i>
                        <span id="current-date">Rabu, 6 Agustus 2025</span>
                    </div>
                    <div class="flex items-center gap-2 bg-white/20 backdrop-blur-sm px-4 py-2 rounded-full">
                        <i class="fas fa-clock text-canva-blue"></i>
                        <span id="current-time">--:--</span>
                    </div>
                    <div class="flex items-center gap-2 bg-white/20 backdrop-blur-sm px-4 py-2 rounded-full">
                        <i class="fas fa-map-marker-alt text-canva-pink"></i>
                        <span>SDN 2 Palapi</span>
                    </div>
                </div>

                <!-- Canva Logo -->
                <div class="mb-8 animate-bounce-in" style="animation-delay: 0.6s;">
                    <div class="inline-flex items-center justify-center w-24 h-24 bg-white rounded-full shadow-2xl animate-pulse-slow">
                        <svg viewBox="0 0 24 24" class="w-12 h-12">
                            <path fill="#00C4CC" d="M7.5 12c0 2.5 2 4.5 4.5 4.5s4.5-2 4.5-4.5-2-4.5-4.5-4.5S7.5 9.5 7.5 12z"/>
                            <path fill="#7B68EE" d="M12 2C6.5 2 2 6.5 2 12s4.5 10 10 10 10-4.5 10-10S17.5 2 12 2zm0 16c-3.3 0-6-2.7-6-6s2.7-6 6-6 6 2.7 6 6-2.7 6-6 6z"/>
                        </svg>
                    </div>
                </div>
                
                <button onclick="showPage('daftar-hadir')" class="bg-white text-canva-purple px-8 py-4 rounded-full text-lg font-bold hover:shadow-2xl transform hover:scale-110 transition-all duration-300 animate-bounce-in" style="animation-delay: 0.8s;">
                    <i class="fas fa-rocket mr-2"></i>
                    Daftar Segera!
                </button>
            </div>
        </section>
    </div>

    <!-- Materi Page -->
    <div id="materi" class="page-section">
        <section class="py-16 px-4 min-h-screen">
            <div class="max-w-6xl mx-auto">
                <div class="text-center mb-12">
                    <h2 class="text-4xl font-bold text-gray-800 mb-4">
                        <i class="fas fa-book-open text-canva-purple mr-3"></i>
                        Materi Workshop
                    </h2>
                    <p class="text-gray-600 text-lg">Pelajari berbagai teknik desain dengan Canva</p>
                </div>
                
                <div id="materi-list" class="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
                    <!-- Materi akan dimuat dari Google Sheets -->
                    <div class="text-center py-8">
                        <div class="animate-spin rounded-full h-12 w-12 border-b-2 border-canva-purple mx-auto"></div>
                        <p class="mt-4 text-gray-600">Memuat materi...</p>
                    </div>
                </div>
            </div>
        </section>
    </div>

    <!-- Daftar Hadir Page -->
    <div id="daftar-hadir" class="page-section">
        <section class="py-16 px-4 min-h-screen">
            <div class="max-w-6xl mx-auto">
                <div class="text-center mb-12">
                    <h2 class="text-4xl font-bold text-white mb-4 animate-slide-up">
                        <i class="fas fa-user-plus text-canva-blue mr-3"></i>
                        Presensi
                    </h2>
                    <p class="text-white/80 text-lg animate-slide-up" style="animation-delay: 0.2s;">Silakan lakukan presensi bagi yang mengikuti workshop</p>
                </div>
                
                <div class="grid lg:grid-cols-2 gap-8">
                    <!-- Form Pendaftaran -->
                    <div class="bg-white/95 backdrop-blur-sm rounded-2xl shadow-2xl p-8 card-hover animate-slide-up" style="animation-delay: 0.4s;">
                        <h3 class="text-2xl font-bold text-gray-800 mb-6">
                            <i class="fas fa-edit text-canva-purple mr-2"></i>
                            Presensi
                        </h3>
                        <form id="daftar-form" class="space-y-6">
                            <div class="grid md:grid-cols-2 gap-6">
                                <div>
                                    <label class="block text-gray-700 font-semibold mb-2">Nama Lengkap</label>
                                    <input type="text" name="Nama Lengkap" required class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-canva-purple focus:border-transparent transition-all">
                                </div>
                                <div>
                                    <label class="block text-gray-700 font-semibold mb-2">Instansi</label>
                                    <input type="text" name="Instansi" required class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-canva-purple focus:border-transparent transition-all">
                                </div>
                            </div>
                            <div class="grid md:grid-cols-2 gap-6">
                                <div>
                                    <label class="block text-gray-700 font-semibold mb-2">Email</label>
                                    <input type="email" name="Email" required class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-canva-purple focus:border-transparent transition-all">
                                </div>
                                <div>
                                    <label class="block text-gray-700 font-semibold mb-2">No. HP</label>
                                    <input type="tel" name="No. HP" required class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-canva-purple focus:border-transparent transition-all">
                                </div>
                            </div>
                            <button type="submit" class="w-full bg-gradient-to-r from-canva-purple to-canva-blue text-white py-3 rounded-lg font-semibold hover:shadow-2xl transform hover:scale-105 transition-all duration-300">
                                <i class="fas fa-paper-plane mr-2"></i>
                                Kirim Presensi
                            </button>
                        </form>
                        
                        <div id="success-message" class="hidden mt-6 p-4 bg-canva-green/20 border border-canva-green text-canva-green rounded-lg animate-bounce-in">
                            <i class="fas fa-check-circle mr-2"></i>
                            Terima kasih, data Anda telah tercatat!
                        </div>
                        
                        <div id="error-message" class="hidden mt-6 p-4 bg-canva-orange/20 border border-canva-orange text-canva-orange rounded-lg animate-bounce-in">
                            <i class="fas fa-exclamation-triangle mr-2"></i>
                            <span id="error-text">Terjadi kesalahan saat mendaftar. Silakan coba lagi.</span>
                        </div>
                    </div>

                    <!-- Rekap Peserta -->
                    <div class="bg-white/95 backdrop-blur-sm rounded-2xl shadow-2xl p-8 card-hover animate-slide-up" style="animation-delay: 0.6s;">
                        <h3 class="text-2xl font-bold text-gray-800 mb-6">
                            <i class="fas fa-users text-canva-green mr-2"></i>
                            Rekap Peserta Terdaftar
                        </h3>
                        
                        <!-- Stats -->
                        <div class="grid grid-cols-2 gap-4 mb-6">
                            <div class="bg-gradient-to-r from-canva-purple to-canva-blue p-4 rounded-xl text-white text-center">
                                <div class="text-2xl font-bold" id="total-peserta">0</div>
                                <div class="text-sm opacity-90">Total Peserta</div>
                            </div>
                            <div class="bg-gradient-to-r from-canva-green to-canva-blue p-4 rounded-xl text-white text-center">
                                <div class="text-2xl font-bold" id="peserta-hari-ini">0</div>
                                <div class="text-sm opacity-90">Hari Ini</div>
                            </div>
                        </div>

                        <!-- Daftar Peserta -->
                        <div class="max-h-96 overflow-y-auto">
                            <div id="peserta-list" class="space-y-3">
                                <div class="text-center py-8">
                                    <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-canva-purple mx-auto"></div>
                                    <p class="mt-2 text-gray-600">Memuat data peserta...</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </div>

    <!-- Dokumentasi Page -->
    <div id="dokumentasi" class="page-section">
        <section class="py-16 px-4 min-h-screen">
            <div class="max-w-7xl mx-auto">
                <div class="text-center mb-12">
                    <h2 class="text-4xl font-bold text-white mb-4 animate-slide-up">
                        <i class="fas fa-camera text-canva-pink mr-3"></i>
                        Dokumentasi Workshop
                    </h2>
                    <p class="text-white/80 text-lg animate-slide-up" style="animation-delay: 0.2s;">Galeri foto dan video kegiatan workshop</p>
                </div>
                
                <!-- Google Photos Album Display -->
                <div class="bg-white/95 backdrop-blur-sm rounded-2xl shadow-2xl p-8 mb-12 card-hover animate-slide-up" style="animation-delay: 0.4s;">
                    <h3 class="text-2xl font-bold text-gray-800 mb-6">
                        <i class="fas fa-images text-canva-pink mr-2"></i>
                        Album Foto Workshop
                    </h3>
                    
                    <!-- Google Photos Album Card -->
                    <div class="bg-gradient-to-br from-canva-green to-canva-blue rounded-xl p-6 text-white relative overflow-hidden">
                        <!-- Background Pattern -->
                        <div class="absolute inset-0 opacity-20">
                            <div class="absolute top-4 right-4 w-16 h-16 bg-white/20 rounded-full animate-float"></div>
                            <div class="absolute bottom-4 left-4 w-12 h-12 bg-white/20 rounded-full animate-float" style="animation-delay: 1s;"></div>
                        </div>
                        
                        <div class="relative z-10">
                            <div class="flex items-center mb-4">
                                <div class="w-16 h-16 bg-white/20 backdrop-blur-sm rounded-full flex items-center justify-center mr-4 animate-pulse-slow">
                                    <i class="fas fa-images text-2xl text-white"></i>
                                </div>
                                <div>
                                    <h4 class="text-xl font-bold">Galeri Foto Workshop</h4>
                                    <p class="text-white/80">Koleksi foto kegiatan Canva Power Class</p>
                                </div>
                            </div>
                            
                            <div class="flex items-center justify-between">
                                <div class="flex items-center space-x-4">
                                    <span class="bg-white/20 backdrop-blur-sm px-3 py-1 rounded-full text-sm font-medium">
                                        <i class="fas fa-tag mr-1"></i>
                                        GALERI
                                    </span>
                                    <span class="bg-white/20 backdrop-blur-sm px-3 py-1 rounded-full text-sm font-medium">
                                        <i class="fas fa-calendar mr-1"></i>
                                        6 Agustus 2025
                                    </span>
                                </div>
                                <a href="https://photos.google.com/share/AF1QipPDbrMQ9-Vy1RaMcSITR6jt3j3R02V0_s4qiu8jU3LCjEDV6N0mcuHkuSNl-9YFSw?key=WkdHY3VxY3I5ZVlMX3FKcXZVTkZqNzV6eUZYZDl3" target="_blank" class="bg-white text-canva-green px-6 py-3 rounded-lg font-semibold hover:shadow-xl transform hover:scale-110 transition-all duration-300 group">
                                    <i class="fas fa-external-link-alt mr-2 group-hover:animate-bounce"></i>
                                    Buka Galeri
                                </a>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Info Card -->
                    <div class="mt-6 bg-gradient-to-r from-canva-blue/10 to-canva-purple/10 border border-canva-blue/20 rounded-lg p-4">
                        <div class="flex items-start space-x-3">
                            <i class="fas fa-info-circle text-canva-blue text-xl mt-1"></i>
                            <div>
                                <h5 class="font-semibold text-gray-800 mb-1">Tentang Album Ini</h5>
                                <p class="text-gray-600 text-sm leading-relaxed">
                                    Album ini berisi dokumentasi lengkap kegiatan Canva Power Class di SDN 2 Palapi. 
                                    Klik tombol "Buka Galeri" untuk melihat semua foto workshop, aktivitas peserta, 
                                    dan momen-momen berharga selama pelatihan.
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </div>

    <!-- Proyek Peserta Page -->
    <div id="proyek" class="page-section">
        <section class="py-16 px-4 min-h-screen">
            <div class="max-w-7xl mx-auto">
                <div class="text-center mb-12">
                    <h2 class="text-4xl font-bold text-white mb-4 animate-slide-up">
                        <i class="fas fa-palette text-canva-yellow mr-3"></i>
                        Hasil Karya Peserta
                    </h2>
                    <p class="text-white/80 text-lg animate-slide-up" style="animation-delay: 0.2s;">Koleksi karya Canva dari peserta workshop</p>
                </div>
                
                <!-- Upload Form -->
                <div class="bg-white/95 backdrop-blur-sm rounded-2xl shadow-2xl p-8 mb-12 card-hover animate-slide-up" style="animation-delay: 0.4s;">
                    <h3 class="text-2xl font-bold text-gray-800 mb-6">
                        <i class="fas fa-cloud-upload-alt text-canva-yellow mr-2"></i>
                        Upload Karya Anda
                    </h3>
                    <form id="proyek-form" class="space-y-6">
                        <div class="grid md:grid-cols-2 gap-6">
                            <div>
                                <label class="block text-gray-700 font-semibold mb-2">Judul Karya</label>
                                <input type="text" name="judul" required class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-canva-yellow focus:border-transparent transition-all">
                            </div>
                            <div>
                                <label class="block text-gray-700 font-semibold mb-2">Nama Guru</label>
                                <input type="text" name="nama_guru" required class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-canva-yellow focus:border-transparent transition-all">
                            </div>
                        </div>
                        <div>
                            <label class="block text-gray-700 font-semibold mb-2">Deskripsi</label>
                            <textarea name="deskripsi" rows="3" required class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-canva-yellow focus:border-transparent transition-all"></textarea>
                        </div>
                        <div class="grid md:grid-cols-2 gap-6">
                            <div>
                                <label class="block text-gray-700 font-semibold mb-2">Link Karya Canva</label>
                                <input type="url" name="link_karya" required class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-canva-yellow focus:border-transparent transition-all" placeholder="https://canva.com/...">
                            </div>
                            <div>
                                <label class="block text-gray-700 font-semibold mb-2">Kategori</label>
                                <select name="kategori" class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-canva-yellow focus:border-transparent transition-all">
                                    <option value="Umum">Umum</option>
                                    <option value="Poster">Poster</option>
                                    <option value="Infografis">Infografis</option>
                                    <option value="Presentasi">Presentasi</option>
                                    <option value="Media Pembelajaran">Media Pembelajaran</option>
                                    <option value="Sertifikat">Sertifikat</option>
                                    <option value="Lainnya">Lainnya</option>
                                </select>
                            </div>
                        </div>
                        <button type="submit" class="w-full bg-gradient-to-r from-canva-yellow to-canva-pink text-white py-3 rounded-lg font-semibold hover:shadow-2xl transform hover:scale-105 transition-all duration-300">
                            <i class="fas fa-upload mr-2"></i>
                            Upload Karya
                        </button>
                    </form>
                </div>
                
                <!-- Gallery -->
                <div class="animate-slide-up" style="animation-delay: 0.6s;">
                    <h3 class="text-3xl font-bold text-white mb-8 text-center">
                        <i class="fas fa-images text-canva-pink mr-3"></i>
                        Galeri Karya Peserta
                    </h3>
                    <div id="proyek-gallery" class="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
                        <!-- Proyek akan dimuat dari Google Sheets -->
                        <div class="text-center py-8 col-span-full">
                            <div class="animate-spin rounded-full h-12 w-12 border-b-2 border-canva-yellow mx-auto"></div>
                            <p class="mt-4 text-white/80">Memuat galeri karya...</p>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </div>

    <!-- Sertifikat Page -->
    <div id="sertifikat" class="page-section">
        <section class="py-16 px-4 min-h-screen">
            <div class="max-w-6xl mx-auto">
                <div class="text-center mb-12">
                    <h2 class="text-4xl font-bold text-white mb-4 animate-slide-up">
                        <i class="fas fa-certificate text-canva-blue mr-3"></i>
                        Sertifikat Workshop
                    </h2>
                    <p class="text-white/80 text-lg animate-slide-up" style="animation-delay: 0.2s;">Cari dan unduh sertifikat keikutsertaan Anda</p>
                </div>
                
                <div class="max-w-2xl mx-auto">
                    <!-- Form Pencarian -->
                    <div class="bg-white/95 backdrop-blur-sm rounded-2xl shadow-2xl p-8 card-hover animate-slide-up" style="animation-delay: 0.4s;">
                        <h3 class="text-2xl font-bold text-gray-800 mb-6">
                            <i class="fas fa-search text-canva-blue mr-2"></i>
                            Cari Sertifikat
                        </h3>
                        <form id="sertifikat-form" class="space-y-6">
                            <div>
                                <label class="block text-gray-700 font-semibold mb-2">Cari berdasarkan Nama atau Email</label>
                                <input type="text" name="search" required class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-canva-blue focus:border-transparent transition-all" placeholder="Masukkan nama atau email Anda">
                            </div>
                            <button type="submit" class="w-full bg-gradient-to-r from-canva-blue to-canva-purple text-white py-3 rounded-lg font-semibold hover:shadow-2xl transform hover:scale-105 transition-all duration-300">
                                <i class="fas fa-search mr-2"></i>
                                Cari Sertifikat
                            </button>
                        </form>
                        
                        <div id="sertifikat-result" class="mt-6 hidden">
                            <!-- Hasil pencarian akan ditampilkan di sini -->
                        </div>
                        
                        <div id="sertifikat-not-found" class="hidden mt-6 p-4 bg-canva-orange/20 border border-canva-orange text-canva-orange rounded-lg animate-bounce-in">
                            <i class="fas fa-exclamation-triangle mr-2"></i>
                            Data tidak ditemukan, pastikan Anda telah mengikuti workshop.
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </div>

    <!-- Footer -->
    <footer class="bg-gradient-to-r from-gray-900 via-gray-800 to-gray-900 text-white py-16 px-4 relative overflow-hidden">
        <!-- Background Pattern -->
        <div class="absolute inset-0 opacity-10">
            <div class="absolute top-0 left-0 w-full h-full bg-gradient-to-br from-canva-purple/20 to-canva-blue/20"></div>
            <div class="absolute top-10 left-10 w-32 h-32 bg-canva-pink/10 rounded-full animate-float"></div>
            <div class="absolute bottom-10 right-10 w-24 h-24 bg-canva-yellow/10 rounded-full animate-float" style="animation-delay: 1s;"></div>
            <div class="absolute top-1/2 left-1/3 w-16 h-16 bg-canva-green/10 rounded-full animate-float" style="animation-delay: 2s;"></div>
        </div>
        
        <div class="max-w-6xl mx-auto relative z-10">
            <!-- Divider -->
            <div class="pt-8">
                <div class="flex flex-col md:flex-row justify-between items-center">
                    <!-- Copyright -->
                    <div class="text-center md:text-left mb-4 md:mb-0">
                        <p class="text-gray-400">
                            © 2025 | Alfian Noor Arnaim, S.Pd.Gr. Canva Enthusiast.
                        </p>
                    </div>
                    
                    <!-- Canva Badge -->
                    <div class="flex items-center space-x-2 bg-white/10 backdrop-blur-sm px-4 py-2 rounded-full">
                        <div class="w-6 h-6 bg-gradient-to-r from-canva-purple to-canva-blue rounded-full flex items-center justify-center">
                            <svg viewBox="0 0 24 24" class="w-4 h-4 text-white">
                                <path fill="currentColor" d="M7.5 12c0 2.5 2 4.5 4.5 4.5s4.5-2 4.5-4.5-2-4.5-4.5-4.5S7.5 9.5 7.5 12z"/>
                                <path fill="currentColor" d="M12 2C6.5 2 2 6.5 2 12s4.5 10 10 10 10-4.5 10-10S17.5 2 12 2zm0 16c-3.3 0-6-2.7-6-6s2.7-6 6-6 6 2.7 6 6-2.7 6-6 6z"/>
                            </svg>
                        </div>
                        <span class="text-sm font-medium text-white">Powered by Canva</span>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Gradient Line -->
        <div class="absolute bottom-0 left-0 w-full h-0.5 bg-gradient-to-r from-canva-purple via-canva-blue via-canva-pink via-canva-yellow to-canva-green"></div>
    </footer>

    <script>
        // Google Apps Script Web App URL - REPLACE WITH YOUR DEPLOYED APPS SCRIPT URL
        const APPS_SCRIPT_URL = 'https://script.google.com/macros/s/AKfycbyX_HgeC3bRf8BwRzM3ELSNVFeI7Qv9DxZk0dYIgxg6uxheoyrO9NPBOiyNVDauAum4aA/exec';
        
        // Backup CSV endpoints (will be used if Apps Script fails)
        const SHEETS_CSV_URL = 'https://docs.google.com/spreadsheets/d/e/2PACX-1vScw8m7EftR0CuDt2a7zqUGSHGAbCTCNMXrjJYqXljswkqpbcflmTmVG1FSyCofbpLXBXkmpvvIl39s/pub?output=csv';
        const MATERI_CSV_URL = 'https://docs.google.com/spreadsheets/d/e/2PACX-1vScw8m7EftR0CuDt2a7zqUGSHGAbCTCNMXrjJYqXljswkqpbcflmTmVG1FSyCofbpLXBXkmpvvIl39s/pub?gid=228009053&single=true&output=csv';
        const DOKUMENTASI_CSV_URL = 'https://docs.google.com/spreadsheets/d/e/2PACX-1vScw8m7EftR0CuDt2a7zqUGSHGAbCTCNMXrjJYqXljswkqpbcflmTmVG1FSyCofbpLXBXkmpvvIl39s/pub?gid=1310656840&single=true&output=csv';
        const PROYEK_CSV_URL = 'https://docs.google.com/spreadsheets/d/e/2PACX-1vScw8m7EftR0CuDt2a7zqUGSHGAbCTCNMXrjJYqXljswkqpbcflmTmVG1FSyCofbpLXBXkmpvvIl39s/pub?gid=1432524749&single=true&output=csv';

        // Mobile menu toggle
        document.getElementById('mobile-menu-btn').addEventListener('click', function() {
            const mobileMenu = document.getElementById('mobile-menu');
            mobileMenu.classList.toggle('hidden');
        });

        // Page navigation system
        function showPage(pageId) {
            // Hide all pages
            const pages = document.querySelectorAll('.page-section');
            pages.forEach(page => {
                page.classList.remove('active');
            });
            
            // Show selected page
            const targetPage = document.getElementById(pageId);
            if (targetPage) {
                targetPage.classList.add('active');
            }
            
            // Update navigation active state
            const navLinks = document.querySelectorAll('.nav-link');
            navLinks.forEach(link => {
                link.classList.remove('active');
            });
            
            // Find and activate the corresponding nav link
            const activeLink = document.querySelector(`[onclick="showPage('${pageId}')"]`);
            if (activeLink && activeLink.classList.contains('nav-link')) {
                activeLink.classList.add('active');
            }
            
            // Close mobile menu
            document.getElementById('mobile-menu').classList.add('hidden');
            
            // Scroll to top
            window.scrollTo({ top: 0, behavior: 'smooth' });
            
            // Load data for specific pages
            if (pageId === 'materi') {
                loadMateri();
            } else if (pageId === 'daftar-hadir') {
                loadPeserta();
            } else if (pageId === 'dokumentasi') {
                // Google Photos album is displayed statically
            } else if (pageId === 'proyek') {
                loadProyek();
            } else if (pageId === 'sertifikat') {
                loadSertifikat();
            }
        }

        // Date formatting function to handle various date formats
        function formatDate(dateString) {
            if (!dateString || dateString.trim() === '' || dateString === '-') {
                return '';
            }
            
            try {
                // Try to parse the date
                let date;
                
                // Handle various date formats
                if (dateString.includes('/')) {
                    // Format: MM/DD/YYYY or DD/MM/YYYY
                    const parts = dateString.split('/');
                    if (parts.length === 3) {
                        // Assume DD/MM/YYYY format (Indonesian style)
                        date = new Date(parts[2], parts[1] - 1, parts[0]);
                    }
                } else if (dateString.includes('-')) {
                    // Format: YYYY-MM-DD or DD-MM-YYYY
                    date = new Date(dateString);
                } else {
                    // Try direct parsing
                    date = new Date(dateString);
                }
                
                // Check if date is valid
                if (isNaN(date.getTime())) {
                    // If parsing failed, try alternative formats
                    const now = new Date();
                    
                    // Check if it's a timestamp
                    const timestamp = parseInt(dateString);
                    if (!isNaN(timestamp) && timestamp > 1000000000) {
                        date = new Date(timestamp * (timestamp < 10000000000 ? 1000 : 1));
                    } else {
                        // Return current date as fallback
                        date = now;
                    }
                }
                
                // Format the date in Indonesian locale
                return date.toLocaleDateString('id-ID', {
                    year: 'numeric',
                    month: 'short',
                    day: 'numeric',
                    hour: '2-digit',
                    minute: '2-digit'
                });
                
            } catch (error) {
                console.log('Date formatting error:', error, 'for date:', dateString);
                // Return current date as fallback
                return new Date().toLocaleDateString('id-ID', {
                    year: 'numeric',
                    month: 'short',
                    day: 'numeric'
                });
            }
        }

        // Enhanced CSV parsing function with better handling and debugging
        function parseCSV(csvText) {
            console.log('=== CSV PARSING DEBUG ===');
            console.log('Raw CSV length:', csvText.length);
            console.log('First 200 characters:', csvText.substring(0, 200));
            
            const lines = csvText.split('\n').filter(line => line.trim());
            console.log('Total lines after filtering:', lines.length);
            
            if (lines.length < 1) {
                console.log('❌ CSV has no lines');
                return [];
            }
            
            // Parse headers - handle quoted fields properly
            const headerLine = lines[0];
            const headers = parseCSVLine(headerLine);
            
            console.log('📋 CSV Headers found:', headers);
            console.log('📋 Number of headers:', headers.length);
            
            const data = [];
            
            for (let i = 1; i < lines.length; i++) {
                const line = lines[i];
                if (!line.trim()) continue;
                
                const values = parseCSVLine(line);
                console.log(`Row ${i} values:`, values);
                
                // Create row object
                const row = {};
                headers.forEach((header, index) => {
                    const value = values[index] || '';
                    row[header] = value;
                });
                
                console.log(`Row ${i} object:`, row);
                
                // Only add row if it has meaningful data
                const hasData = Object.values(row).some(value => 
                    value && 
                    String(value).trim() && 
                    String(value).trim() !== '-' && 
                    String(value).trim() !== 'undefined' &&
                    String(value).trim() !== ''
                );
                
                console.log(`Row ${i} has data:`, hasData);
                
                if (hasData) {
                    data.push(row);
                }
            }
            
            console.log(`✅ Parsed ${data.length} valid rows from CSV`);
            if (data.length > 0) {
                console.log('📄 Sample row:', data[0]);
                console.log('📄 All column names in first row:', Object.keys(data[0]));
            }
            console.log('=== END CSV PARSING DEBUG ===');
            
            return data;
        }

        // Helper function to parse a single CSV line
        function parseCSVLine(line) {
            const result = [];
            let current = '';
            let inQuotes = false;
            
            for (let i = 0; i < line.length; i++) {
                const char = line[i];
                const nextChar = line[i + 1];
                
                if (char === '"') {
                    if (inQuotes && nextChar === '"') {
                        // Escaped quote
                        current += '"';
                        i++; // Skip next quote
                    } else {
                        // Toggle quote state
                        inQuotes = !inQuotes;
                    }
                } else if (char === ',' && !inQuotes) {
                    // Field separator
                    result.push(current.trim());
                    current = '';
                } else {
                    current += char;
                }
            }
            
            // Add the last field
            result.push(current.trim());
            
            return result;
        }

        // Enhanced form submission to Google Apps Script with better field handling
        async function submitToGoogleSheets(data, sheetName = 'Peserta') {
            try {
                // Add timestamp in Indonesian format
                const timestamp = new Date().toLocaleString('id-ID', {
                    timeZone: 'Asia/Jakarta',
                    year: 'numeric',
                    month: '2-digit',
                    day: '2-digit',
                    hour: '2-digit',
                    minute: '2-digit',
                    second: '2-digit'
                });
                
                // Prepare data with timestamp - ensure all fields are properly included
                const submitData = {
                    timestamp: timestamp,
                    ...data
                };
                
                // Method 1: Enhanced FormData POST (most reliable for complex data)
                try {
                    const formData = new FormData();
                    formData.append('action', 'submit');
                    formData.append('sheet', sheetName);
                    
                    // Add all data fields with explicit logging
                    Object.keys(submitData).forEach(key => {
                        const value = submitData[key];
                        if (value !== null && value !== undefined && value !== '') {
                            const stringValue = String(value).trim();
                            formData.append(key, stringValue);
                        }
                    });
                    
                    const response = await fetch(APPS_SCRIPT_URL, {
                        method: 'POST',
                        body: formData
                    });
                    
                    if (response.ok || response.status === 302) {
                        return { status: 'success', message: 'Data berhasil dikirim' };
                    }
                    
                } catch (postError) {
                    console.log('FormData POST method failed:', postError.message);
                }
                
                // Method 2: GET request with URL parameters (fallback)
                try {
                    const params = new URLSearchParams();
                    params.append('action', 'submit');
                    params.append('sheet', sheetName);
                    
                    // Add all data fields
                    Object.keys(submitData).forEach(key => {
                        const value = submitData[key];
                        if (value !== null && value !== undefined && value !== '') {
                            const stringValue = String(value).trim();
                            params.append(key, stringValue);
                        }
                    });
                    
                    const getUrl = `${APPS_SCRIPT_URL}?${params.toString()}`;
                    
                    const response = await fetch(getUrl, {
                        method: 'GET',
                        mode: 'cors'
                    });
                    
                    if (response.ok || response.status === 302) {
                        return { status: 'success', message: 'Data berhasil dikirim' };
                    }
                    
                } catch (getError) {
                    console.log('GET method failed:', getError.message);
                }
                
                // Method 3: No-cors POST (last resort)
                try {
                    const formData = new FormData();
                    formData.append('action', 'submit');
                    formData.append('sheet', sheetName);
                    
                    Object.keys(submitData).forEach(key => {
                        const value = submitData[key];
                        if (value !== null && value !== undefined && value !== '') {
                            formData.append(key, String(value).trim());
                        }
                    });
                    
                    await fetch(APPS_SCRIPT_URL, {
                        method: 'POST',
                        mode: 'no-cors',
                        body: formData
                    });
                    
                    return { status: 'success', message: 'Data dikirim (no-cors mode)' };
                    
                } catch (noCorsError) {
                    console.log('No-cors method failed:', noCorsError.message);
                }
                
                return { status: 'error', message: 'Gagal mengirim data. Periksa koneksi internet.' };
                
            } catch (error) {
                console.log('Critical submission error:', error);
                return { status: 'error', message: `Error: ${error.message}` };
            }
        }

        // Load data from Google Sheets CSV
        async function loadData(sheet) {
            try {
                let csvUrl = SHEETS_CSV_URL;
                
                // Use specific CSV URLs for different sheets
                switch(sheet) {
                    case 'Materi':
                        csvUrl = MATERI_CSV_URL;
                        break;
                    case 'Dokumentasi':
                        csvUrl = DOKUMENTASI_CSV_URL;
                        break;
                    default:
                        csvUrl = SHEETS_CSV_URL;
                }
                
                const response = await fetch(csvUrl, {
                    method: 'GET',
                    mode: 'cors',
                    headers: {
                        'Accept': 'text/csv',
                    }
                });
                
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status} - ${response.statusText}`);
                }
                
                const csvText = await response.text();
                
                // Parse CSV data
                const data = parseCSV(csvText);
                
                // Filter data based on sheet type
                let filteredData = data;
                
                switch(sheet) {
                    case 'Peserta':
                        filteredData = data.filter(row => 
                            (row['Nama Lengkap'] || row.nama) && (row['Email'] || row.email)
                        );
                        break;
                    case 'Materi':
                        filteredData = data.filter(row => 
                            row.judul || row.title || row.nama
                        );
                        break;
                    case 'Dokumentasi':
                        filteredData = data.filter(row => 
                            row.deskripsi || row.judul
                        );
                        break;
                    case 'Proyek Peserta':
                        filteredData = data.filter(row => 
                            (row.judul || row['Judul Karya']) && (row.nama_guru || row['Nama Guru'])
                        );
                        break;
                    case 'Sertifikat':
                        filteredData = data.filter(row => 
                            row.nama || row['Nama Lengkap']
                        );
                        break;
                    default:
                        filteredData = data;
                }
                
                return filteredData;
                
            } catch (error) {
                console.log(`Error loading data for ${sheet}:`, error);
                return [];
            }
        }

        // Load Peserta with exact field matching
        async function loadPeserta() {
            try {
                const response = await fetch(SHEETS_CSV_URL, {
                    method: 'GET',
                    mode: 'cors',
                    headers: {
                        'Accept': 'text/csv',
                    }
                });
                
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                
                const csvText = await response.text();
                console.log('Raw CSV text (first 500 chars):', csvText.substring(0, 500));
                
                const peserta = parseCSV(csvText);
                console.log('Parsed peserta data:', peserta);
                
                // Simple field mapping - use exact column names from spreadsheet
                const getFieldValue = (item, fieldName) => {
                    // Try exact match first
                    if (item[fieldName] && String(item[fieldName]).trim()) {
                        return String(item[fieldName]).trim();
                    }
                    
                    // Try to find similar field names
                    const keys = Object.keys(item);
                    const foundKey = keys.find(key => 
                        key.toLowerCase().replace(/[^a-z]/g, '') === fieldName.toLowerCase().replace(/[^a-z]/g, '')
                    );
                    
                    if (foundKey && item[foundKey] && String(item[foundKey]).trim()) {
                        return String(item[foundKey]).trim();
                    }
                    
                    return '';
                };
                
                // Filter valid participants
                const validPeserta = peserta.filter(item => {
                    // Check if this row has participant data (not empty)
                    const hasAnyData = Object.values(item).some(value => 
                        value && String(value).trim() && String(value).trim().length > 1
                    );
                    
                    if (!hasAnyData) return false;
                    
                    // Check for name or email
                    const nama = getFieldValue(item, 'Nama Lengkap') || getFieldValue(item, 'nama');
                    const email = getFieldValue(item, 'Email') || getFieldValue(item, 'email');
                    
                    return (nama && nama.length > 1) || (email && email.includes('@'));
                });
                
                console.log('Valid peserta:', validPeserta);
                
                const pesertaList = document.getElementById('peserta-list');
                const totalPeserta = document.getElementById('total-peserta');
                const pesertaHariIni = document.getElementById('peserta-hari-ini');
                
                if (validPeserta.length === 0) {
                    // Show detailed debug information if no valid data found
                    let debugInfo = '';
                    if (peserta.length > 0) {
                        const sampleRow = peserta[0];
                        const allColumns = Object.keys(sampleRow);
                        const sampleValues = Object.entries(sampleRow).slice(0, 3).map(([key, value]) => `${key}: "${value}"`).join('<br>');
                        
                        debugInfo = `
                            <div class="text-xs text-gray-500 mt-4 p-3 bg-gray-100 rounded border-l-4 border-blue-400">
                                <div class="font-semibold mb-2">🔍 Debug Info:</div>
                                <div><strong>Total rows found:</strong> ${peserta.length}</div>
                                <div><strong>Total columns:</strong> ${allColumns.length}</div>
                                <div class="mt-2"><strong>Column names:</strong><br>${allColumns.join(', ')}</div>
                                <div class="mt-2"><strong>Sample data from first row:</strong><br>${sampleValues}</div>
                                <div class="mt-2 text-blue-600"><strong>Tip:</strong> Pastikan ada data di kolom "Nama Lengkap" atau "Email"</div>
                            </div>
                        `;
                    } else {
                        debugInfo = `
                            <div class="text-xs text-gray-500 mt-4 p-3 bg-gray-100 rounded border-l-4 border-red-400">
                                <div class="font-semibold mb-2">❌ Debug Info:</div>
                                <div>No data rows found in CSV</div>
                                <div class="mt-2 text-red-600"><strong>Kemungkinan masalah:</strong></div>
                                <div>• Spreadsheet kosong</div>
                                <div>• URL CSV tidak valid</div>
                                <div>• Masalah koneksi internet</div>
                            </div>
                        `;
                    }
                    
                    pesertaList.innerHTML = `
                        <div class="text-center text-gray-600 py-4">
                            <div class="text-lg mb-2">Belum ada peserta terdaftar</div>
                            ${debugInfo}
                        </div>
                    `;
                    totalPeserta.textContent = '0';
                    pesertaHariIni.textContent = '0';
                    return;
                }
                
                // Update stats
                totalPeserta.textContent = validPeserta.length;
                
                // Count today's registrations
                const today = new Date().toDateString();
                const todayCount = validPeserta.filter(p => {
                    const timestamp = getFieldValue(p, 'timestamp') || getFieldValue(p, 'Timestamp');
                    if (timestamp) {
                        try {
                            return new Date(timestamp).toDateString() === today;
                        } catch (e) {
                            return false;
                        }
                    }
                    return false;
                }).length;
                pesertaHariIni.textContent = todayCount;
                
                // Sort participants by timestamp (newest first)
                const sortedPeserta = validPeserta.sort((a, b) => {
                    const timestampA = getFieldValue(a, 'timestamp') || getFieldValue(a, 'Timestamp');
                    const timestampB = getFieldValue(b, 'timestamp') || getFieldValue(b, 'Timestamp');
                    
                    if (!timestampA && !timestampB) return 0;
                    if (!timestampA) return 1;
                    if (!timestampB) return -1;
                    
                    try {
                        return new Date(timestampB) - new Date(timestampA);
                    } catch (e) {
                        return 0;
                    }
                });
                
                // Display participant list
                pesertaList.innerHTML = sortedPeserta.map((item, index) => {
                    const nama = getFieldValue(item, 'Nama Lengkap') || getFieldValue(item, 'nama') || 'Nama tidak tersedia';
                    const instansi = getFieldValue(item, 'Instansi') || getFieldValue(item, 'instansi') || 'Instansi tidak tersedia';
                    const email = getFieldValue(item, 'Email') || getFieldValue(item, 'email') || 'Email tidak tersedia';
                    const hp = getFieldValue(item, 'No. HP') || getFieldValue(item, 'no_hp') || 'No. HP tidak tersedia';
                    
                    return `
                        <div class="bg-gray-50 p-4 rounded-lg border-l-4 border-canva-purple animate-slide-up" style="animation-delay: ${index * 0.1}s;">
                            <div class="grid grid-cols-1 md:grid-cols-2 gap-3">
                                <div>
                                    <div class="font-semibold text-gray-800 mb-1">${nama}</div>
                                    <div class="text-sm text-gray-600">${instansi}</div>
                                </div>
                                <div>
                                    <div class="text-sm text-gray-700 mb-1">
                                        <i class="fas fa-envelope text-canva-blue mr-1"></i>
                                        ${email}
                                    </div>
                                    <div class="text-sm text-gray-700">
                                        <i class="fas fa-phone text-canva-green mr-1"></i>
                                        ${hp}
                                    </div>
                                </div>
                            </div>
                        </div>
                    `;
                }).join('');
                
            } catch (error) {
                console.log('Error loading participants:', error);
                const pesertaList = document.getElementById('peserta-list');
                const totalPeserta = document.getElementById('total-peserta');
                const pesertaHariIni = document.getElementById('peserta-hari-ini');
                
                pesertaList.innerHTML = '<div class="text-center text-red-600 py-4">Gagal memuat data peserta. Silakan coba lagi.</div>';
                totalPeserta.textContent = '0';
                pesertaHariIni.textContent = '0';
            }
        }

        // Load Materi
        async function loadMateri() {
            try {
                const response = await fetch(MATERI_CSV_URL, {
                    method: 'GET',
                    mode: 'cors',
                    headers: {
                        'Accept': 'text/csv',
                    }
                });
                
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                
                const csvText = await response.text();
                console.log('Materi CSV text (first 500 chars):', csvText.substring(0, 500));
                
                const materi = parseCSV(csvText);
                console.log('Parsed materi data:', materi);
                
                const materiList = document.getElementById('materi-list');
                
                if (materi.length === 0) {
                    materiList.innerHTML = '<div class="col-span-full text-center text-white/80">Belum ada materi tersedia</div>';
                    return;
                }
                
                // Simple field mapping for materi
                const getFieldValue = (item, fieldName) => {
                    // Try exact match first
                    if (item[fieldName] && String(item[fieldName]).trim()) {
                        return String(item[fieldName]).trim();
                    }
                    
                    // Try to find similar field names
                    const keys = Object.keys(item);
                    const foundKey = keys.find(key => 
                        key.toLowerCase().replace(/[^a-z]/g, '') === fieldName.toLowerCase().replace(/[^a-z]/g, '')
                    );
                    
                    if (foundKey && item[foundKey] && String(item[foundKey]).trim()) {
                        return String(item[foundKey]).trim();
                    }
                    
                    return '';
                };
                
                // Function to find link column
                const findLinkColumn = (item) => {
                    const keys = Object.keys(item);
                    
                    // Look for URL-like content in any column
                    for (let key of keys) {
                        const value = item[key];
                        if (value && typeof value === 'string' && value.trim()) {
                            const trimmedValue = value.trim();
                            if (trimmedValue.includes('http') || 
                                trimmedValue.includes('canva.com') || 
                                trimmedValue.includes('drive.google') || 
                                trimmedValue.includes('youtube') || 
                                trimmedValue.includes('www.')) {
                                return trimmedValue;
                            }
                        }
                    }
                    
                    return '';
                };
                
                // Filter valid materi
                const validMateri = materi.filter(item => {
                    const hasAnyData = Object.values(item).some(value => 
                        value && String(value).trim() && String(value).trim().length > 1
                    );
                    return hasAnyData;
                });
                
                if (validMateri.length === 0) {
                    let debugInfo = '';
                    if (materi.length > 0) {
                        const sampleRow = materi[0];
                        const allColumns = Object.keys(sampleRow);
                        const sampleValues = Object.entries(sampleRow).slice(0, 3).map(([key, value]) => `${key}: "${value}"`).join('<br>');
                        
                        debugInfo = `
                            <div class="text-xs text-white/60 mt-4 p-3 bg-white/10 rounded border-l-4 border-blue-400">
                                <div class="font-semibold mb-2">🔍 Debug Info Materi:</div>
                                <div><strong>Total rows found:</strong> ${materi.length}</div>
                                <div><strong>Available columns:</strong><br>${allColumns.join(', ')}</div>
                                <div class="mt-2"><strong>Sample data:</strong><br>${sampleValues}</div>
                                <div class="mt-2 text-blue-300"><strong>Tip:</strong> Pastikan ada data di kolom "judul", "title", atau "nama"</div>
                            </div>
                        `;
                    } else {
                        debugInfo = `
                            <div class="text-xs text-white/60 mt-4 p-3 bg-white/10 rounded border-l-4 border-red-400">
                                <div class="font-semibold mb-2">❌ Debug Info:</div>
                                <div>No data rows found in Materi sheet</div>
                                <div class="mt-2 text-red-300"><strong>Kemungkinan masalah:</strong></div>
                                <div>• Sheet "Materi" kosong</div>
                                <div>• URL CSV materi tidak valid</div>
                            </div>
                        `;
                    }
                    
                    materiList.innerHTML = `
                        <div class="col-span-full text-center text-white/80">
                            <div class="text-lg mb-2">Belum ada materi tersedia</div>
                            ${debugInfo}
                        </div>
                    `;
                    return;
                }
                
                materiList.innerHTML = validMateri.map((item, index) => {
                    // Try common field names for materi
                    const judul = getFieldValue(item, 'judul') || getFieldValue(item, 'title') || getFieldValue(item, 'nama') || 'Judul Materi';
                    const pemateri = getFieldValue(item, 'pemateri') || getFieldValue(item, 'presenter') || getFieldValue(item, 'pembicara') || '';
                    const deskripsi = getFieldValue(item, 'deskripsi') || getFieldValue(item, 'description') || getFieldValue(item, 'keterangan') || '';
                    const kategori = getFieldValue(item, 'kategori') || getFieldValue(item, 'category') || getFieldValue(item, 'jenis') || '';
                    const durasi = getFieldValue(item, 'durasi') || getFieldValue(item, 'duration') || getFieldValue(item, 'waktu') || '';
                    const tanggal = getFieldValue(item, 'tanggal') || getFieldValue(item, 'date') || getFieldValue(item, 'hari') || '';
                    const link = findLinkColumn(item);
                    
                    return `
                        <div class="bg-white/95 backdrop-blur-sm rounded-xl shadow-2xl p-6 card-hover animate-slide-up relative overflow-hidden" style="animation-delay: ${index * 0.1}s;">
                            <!-- Decorative background elements -->
                            <div class="absolute top-0 right-0 w-20 h-20 bg-gradient-to-br from-canva-purple/10 to-canva-blue/10 rounded-full -translate-y-10 translate-x-10"></div>
                            <div class="absolute bottom-0 left-0 w-16 h-16 bg-gradient-to-tr from-canva-pink/10 to-canva-yellow/10 rounded-full translate-y-8 -translate-x-8"></div>
                            
                            <div class="flex items-center mb-3 relative z-10">
                                <div class="w-12 h-12 bg-gradient-to-r from-canva-purple to-canva-blue rounded-lg flex items-center justify-center mr-4 animate-pulse-slow shadow-lg">
                                    <i class="fas fa-book text-white text-xl animate-float"></i>
                                </div>
                                <div class="flex-1">
                                    <h3 class="text-xl font-bold text-gray-800">${judul}</h3>
                                    ${pemateri ? `<span class="text-sm text-canva-purple font-semibold flex items-center"><i class="fas fa-user-tie mr-1 text-xs"></i>${pemateri}</span>` : ''}
                                </div>
                            </div>
                            ${deskripsi ? `<p class="text-gray-600 mb-4 leading-relaxed">${deskripsi}</p>` : ''}
                            <div class="flex flex-wrap gap-2 mb-4 relative z-10">
                                ${kategori ? `<span class="px-3 py-1 bg-canva-yellow/20 text-canva-yellow rounded-full text-sm font-medium hover:bg-canva-yellow/30 transition-all transform hover:scale-105"><i class="fas fa-tag mr-1 animate-pulse"></i>${kategori}</span>` : ''}
                                ${durasi ? `<span class="px-3 py-1 bg-canva-green/20 text-canva-green rounded-full text-sm font-medium hover:bg-canva-green/30 transition-all transform hover:scale-105"><i class="fas fa-clock mr-1 animate-pulse"></i>${durasi}</span>` : ''}
                            </div>
                            <div class="flex justify-between items-center relative z-10">
                                <div class="text-sm text-gray-500 flex items-center">
                                    ${tanggal ? `<i class="fas fa-calendar mr-1 text-canva-pink animate-pulse"></i>${formatDate(tanggal)}` : ''}
                                </div>
                                ${link && link !== '' && link !== '-' ? `<a href="${link.startsWith('http') ? link : 'https://' + link}" target="_blank" class="bg-gradient-to-r from-canva-purple to-canva-blue text-white px-4 py-2 rounded-lg hover:shadow-xl transition-all transform hover:scale-110 hover:-translate-y-1 group">
                                    <i class="fas fa-external-link-alt mr-1 group-hover:animate-bounce"></i>
                                    Akses Materi
                                </a>` : '<span class="text-sm text-gray-400 italic flex items-center"><i class="fas fa-link-slash mr-1"></i>Link tidak tersedia</span>'}
                            </div>
                        </div>
                    `;
                }).join('');
                
            } catch (error) {
                console.log('Error loading materi:', error.message);
                const materiList = document.getElementById('materi-list');
                materiList.innerHTML = '<div class="col-span-full text-center text-white/80">Gagal memuat materi. Silakan coba lagi.</div>';
            }
        }

        // Load Proyek
        async function loadProyek() {
            try {
                console.log('=== LOADING PROYEK FROM DEDICATED SHEET ===');
                console.log('Using URL:', PROYEK_CSV_URL);
                
                let proyek = [];
                
                try {
                    const response = await fetch(PROYEK_CSV_URL, {
                        method: 'GET',
                        mode: 'cors',
                        headers: {
                            'Accept': 'text/csv',
                        }
                    });
                    
                    if (response.ok) {
                        const csvText = await response.text();
                        console.log('Raw project CSV text (first 500 chars):', csvText.substring(0, 500));
                        
                        const allData = parseCSV(csvText);
                        console.log('Parsed project data:', allData);
                        
                        // Filter for valid project data
                        proyek = allData.filter(item => {
                            console.log('Checking project row:', item);
                            
                            // Check if this row has meaningful data
                            const hasContent = Object.values(item).some(value => 
                                value && 
                                String(value).trim() && 
                                String(value).trim() !== '-' && 
                                String(value).trim() !== 'undefined' &&
                                String(value).trim().length > 2
                            );
                            
                            console.log('Row has content:', hasContent);
                            return hasContent;
                        });
                        
                        console.log('Valid project rows found:', proyek.length);
                    }
                } catch (fetchError) {
                    console.log('Failed to fetch project data from dedicated sheet:', fetchError.message);
                }
                
                const proyekGallery = document.getElementById('proyek-gallery');
                
                if (proyek.length === 0) {
                    // Enhanced debug info for projects from dedicated sheet
                    let debugInfo = '';
                    try {
                        const response = await fetch(PROYEK_CSV_URL);
                        const csvText = await response.text();
                        const allData = parseCSV(csvText);
                        
                        console.log('=== PROJECT DEBUG INFO (DEDICATED SHEET) ===');
                        console.log('Total rows found in project sheet:', allData.length);
                        
                        if (allData.length > 0) {
                            const sampleRow = allData[0];
                            const allColumns = Object.keys(sampleRow);
                            console.log('All columns in project sheet:', allColumns);
                            console.log('Sample row data:', sampleRow);
                            
                            // Show sample data from first few rows
                            const sampleData = allData.slice(0, 3).map((row, i) => {
                                const entries = Object.entries(row).slice(0, 6);
                                return `<div class="text-xs mb-2"><strong>Row ${i+1}:</strong><br>${entries.map(([k,v]) => `${k}: "${v}"`).join('<br>')}</div>`;
                            }).join('');
                            
                            debugInfo = `
                                <div class="text-xs text-white/60 mt-4 p-3 bg-white/10 rounded border-l-4 border-yellow-400 max-h-96 overflow-y-auto">
                                    <div class="font-semibold mb-2">🔍 Debug Info Proyek (Sheet Khusus):</div>
                                    <div><strong>URL Sheet:</strong> ${PROYEK_CSV_URL}</div>
                                    <div><strong>Total rows in project sheet:</strong> ${allData.length}</div>
                                    <div class="mt-2"><strong>Available columns (${allColumns.length}):</strong><br>${allColumns.join(', ')}</div>
                                    <div class="mt-3"><strong>Sample data from first 3 rows:</strong></div>
                                    ${sampleData}
                                    <div class="mt-2 text-yellow-300"><strong>Expected columns:</strong> timestamp, Judul Karya, Nama Guru, Deskripsi, Link Karya, Kategori</div>
                                    <div class="mt-1 text-yellow-300"><strong>Tip:</strong> Data diambil dari sheet khusus proyek dengan GID 1432524749</div>
                                </div>
                            `;
                        } else {
                            debugInfo = `
                                <div class="text-xs text-white/60 mt-4 p-3 bg-white/10 rounded border-l-4 border-red-400">
                                    <div class="font-semibold mb-2">❌ Debug Info:</div>
                                    <div><strong>URL Sheet:</strong> ${PROYEK_CSV_URL}</div>
                                    <div>No data rows found in dedicated project sheet</div>
                                    <div class="mt-2 text-red-300"><strong>Kemungkinan masalah:</strong></div>
                                    <div>• Sheet proyek kosong (GID: 1432524749)</div>
                                    <div>• URL CSV tidak valid</div>
                                    <div>• Masalah koneksi internet</div>
                                </div>
                            `;
                        }
                    } catch (e) {
                        debugInfo = `
                            <div class="text-xs text-white/60 mt-4 p-3 bg-white/10 rounded border-l-4 border-red-400">
                                <div class="font-semibold mb-2">❌ Debug Info:</div>
                                <div><strong>URL Sheet:</strong> ${PROYEK_CSV_URL}</div>
                                <div>Error loading data from project sheet: ${e.message}</div>
                            </div>
                        `;
                    }
                    
                    proyekGallery.innerHTML = `
                        <div class="col-span-full text-center text-white/80 py-8">
                            <i class="fas fa-palette text-4xl mb-4 opacity-50"></i>
                            <p>Belum ada karya tersedia</p>
                            <p class="text-sm mt-2 opacity-75">Karya yang diupload akan muncul di sini</p>
                            ${debugInfo}
                        </div>
                    `;
                    return;
                }
                
                // Enhanced field mapping for project data
                const getFieldValue = (item, possibleNames) => {
                    // First try exact matches (case sensitive)
                    for (let name of possibleNames) {
                        if (item[name] && String(item[name]).trim() && String(item[name]).trim() !== '-' && String(item[name]).trim() !== 'undefined') {
                            return String(item[name]).trim();
                        }
                    }
                    
                    // Then try case-insensitive matches
                    const itemKeys = Object.keys(item);
                    for (let searchTerm of possibleNames) {
                        const foundKey = itemKeys.find(key => 
                            key.toLowerCase() === searchTerm.toLowerCase()
                        );
                        if (foundKey && item[foundKey] && String(item[foundKey]).trim() && String(item[foundKey]).trim() !== '-' && String(item[foundKey]).trim() !== 'undefined') {
                            return String(item[foundKey]).trim();
                        }
                    }
                    
                    // Finally try partial matches
                    for (let searchTerm of possibleNames) {
                        const foundKey = itemKeys.find(key => 
                            key.toLowerCase().includes(searchTerm.toLowerCase()) ||
                            searchTerm.toLowerCase().includes(key.toLowerCase())
                        );
                        if (foundKey && item[foundKey] && String(item[foundKey]).trim() && String(item[foundKey]).trim() !== '-' && String(item[foundKey]).trim() !== 'undefined') {
                            return String(item[foundKey]).trim();
                        }
                    }
                    
                    return '';
                };
                
                // Sort projects by timestamp (newest first)
                const sortedProyek = proyek.sort((a, b) => {
                    const timestampA = getFieldValue(a, ['timestamp', 'Timestamp', 'waktu', 'tanggal']);
                    const timestampB = getFieldValue(b, ['timestamp', 'Timestamp', 'waktu', 'tanggal']);
                    
                    if (!timestampA && !timestampB) return 0;
                    if (!timestampA) return 1;
                    if (!timestampB) return -1;
                    
                    try {
                        return new Date(timestampB) - new Date(timestampA);
                    } catch (e) {
                        return 0;
                    }
                });
                
                // Display project gallery with enhanced field mapping
                proyekGallery.innerHTML = sortedProyek.map((item, index) => {
                    const judul = getFieldValue(item, ['judul', 'Judul Karya', 'title', 'nama_karya']);
                    const deskripsi = getFieldValue(item, ['deskripsi', 'Deskripsi', 'description', 'keterangan']);
                    const namaGuru = getFieldValue(item, ['nama_guru', 'Nama Guru', 'guru', 'pembuat']);
                    const linkKarya = getFieldValue(item, ['link_karya', 'Link Karya', 'url', 'link']);
                    const timestamp = getFieldValue(item, ['timestamp', 'Timestamp', 'waktu', 'tanggal']);
                    const kategori = getFieldValue(item, ['kategori', 'Kategori', 'category', 'jenis']);
                    
                    // Validate Canva link
                    const isValidCanvaLink = linkKarya && (
                        linkKarya.includes('canva.com') || 
                        linkKarya.includes('canva.cn') ||
                        linkKarya.startsWith('http')
                    );
                    
                    return `
                        <div class="bg-white/95 backdrop-blur-sm rounded-xl shadow-2xl overflow-hidden card-hover animate-slide-up relative group" style="animation-delay: ${index * 0.1}s;">
                            <!-- Decorative header with Canva-style gradient -->
                            <div class="bg-gradient-to-br from-canva-yellow via-canva-pink to-canva-purple h-32 flex items-center justify-center relative overflow-hidden">
                                <!-- Background pattern -->
                                <div class="absolute inset-0 opacity-20">
                                    <div class="absolute top-2 right-2 w-8 h-8 bg-white/30 rounded-full animate-float"></div>
                                    <div class="absolute bottom-2 left-2 w-6 h-6 bg-white/30 rounded-full animate-float" style="animation-delay: 1s;"></div>
                                    <div class="absolute top-1/2 left-1/3 w-4 h-4 bg-white/30 rounded-full animate-float" style="animation-delay: 2s;"></div>
                                </div>
                                
                                <!-- Main icon -->
                                <div class="relative z-10 text-center">
                                    <i class="fas fa-palette text-4xl text-white animate-float mb-2"></i>
                                    ${kategori ? `<div class="text-white text-xs font-medium bg-white/20 backdrop-blur-sm px-2 py-1 rounded-full">${kategori}</div>` : ''}
                                </div>
                                
                                <!-- Canva badge if valid link -->
                                ${isValidCanvaLink ? `<div class="absolute top-2 left-2 bg-white/90 backdrop-blur-sm text-canva-purple px-2 py-1 rounded-full text-xs font-bold flex items-center">
                                    <svg viewBox="0 0 24 24" class="w-3 h-3 mr-1">
                                        <path fill="currentColor" d="M7.5 12c0 2.5 2 4.5 4.5 4.5s4.5-2 4.5-4.5-2-4.5-4.5-4.5S7.5 9.5 7.5 12z"/>
                                    </svg>
                                    CANVA
                                </div>` : ''}
                            </div>
                            
                            <!-- Content -->
                            <div class="p-6">
                                <h3 class="text-lg font-bold text-gray-800 mb-2 line-clamp-2 group-hover:text-canva-purple transition-colors">
                                    ${judul || 'Judul Karya Tidak Tersedia'}
                                </h3>
                                
                                ${deskripsi ? `<p class="text-gray-600 text-sm mb-4 line-clamp-3 leading-relaxed">${deskripsi}</p>` : ''}
                                
                                <!-- Creator info -->
                                <div class="flex items-center justify-between mb-4">
                                    <div class="flex items-center">
                                        <div class="w-8 h-8 bg-gradient-to-r from-canva-purple to-canva-blue rounded-full flex items-center justify-center mr-3">
                                            <i class="fas fa-user text-white text-xs"></i>
                                        </div>
                                        <div>
                                            <div class="text-sm font-semibold text-gray-800">${namaGuru || 'Nama Guru Tidak Tersedia'}</div>
                                            ${timestamp ? `<div class="text-xs text-gray-500">${formatDate(timestamp)}</div>` : ''}
                                        </div>
                                    </div>
                                    
                                    <!-- Status badge -->
                                    <div class="text-xs">
                                        ${isValidCanvaLink ? 
                                            '<span class="bg-canva-green/20 text-canva-green px-2 py-1 rounded-full font-medium flex items-center"><i class="fas fa-check-circle mr-1"></i>Tersedia</span>' : 
                                            '<span class="bg-gray-200 text-gray-600 px-2 py-1 rounded-full font-medium flex items-center"><i class="fas fa-link-slash mr-1"></i>Link Invalid</span>'
                                        }
                                    </div>
                                </div>
                                
                                <!-- Action button -->
                                ${isValidCanvaLink ? 
                                    `<a href="${linkKarya.startsWith('http') ? linkKarya : 'https://' + linkKarya}" target="_blank" class="block w-full text-center bg-gradient-to-r from-canva-yellow to-canva-pink text-white py-3 rounded-lg hover:shadow-xl transition-all transform hover:scale-105 hover:-translate-y-1 font-semibold group">
                                        <i class="fas fa-external-link-alt mr-2 group-hover:animate-bounce"></i>
                                        Lihat Karya di Canva
                                    </a>` : 
                                    `<div class="block w-full text-center bg-gray-300 text-gray-600 py-3 rounded-lg cursor-not-allowed font-semibold">
                                        <i class="fas fa-link-slash mr-2"></i>
                                        Link Tidak Tersedia
                                    </div>`
                                }
                            </div>
                            
                            <!-- Hover overlay -->
                            <div class="absolute inset-0 bg-gradient-to-t from-canva-purple/10 to-transparent opacity-0 group-hover:opacity-100 transition-opacity pointer-events-none"></div>
                        </div>
                    `;
                }).join('');
                
            } catch (error) {
                console.log('Error loading projects:', error);
                const proyekGallery = document.getElementById('proyek-gallery');
                proyekGallery.innerHTML = '<div class="col-span-full text-center text-red-400 py-8"><i class="fas fa-exclamation-triangle text-4xl mb-4"></i><p>Gagal memuat galeri karya</p><p class="text-sm mt-2 opacity-75">Silakan coba refresh halaman</p></div>';
            }
        }

        // Load Sertifikat
        async function loadSertifikat() {
            try {
                let sertifikat = [];
                
                // Try to get certificate data from participant data (fallback)
                try {
                    const response = await fetch(SHEETS_CSV_URL, {
                        method: 'GET',
                        mode: 'cors',
                        headers: {
                            'Accept': 'text/csv',
                        }
                    });
                    
                    if (response.ok) {
                        const csvText = await response.text();
                        const allData = parseCSV(csvText);
                        
                        // Use participant data as certificate data (assuming all participants get certificates)
                        sertifikat = allData.filter(item => {
                            const hasValidData = (
                                (item['Nama Lengkap'] || item.nama) &&
                                (item['Email'] || item.email)
                            );
                            
                            if (hasValidData) {
                                // Add certificate-specific fields
                                item.link_sertifikat = item.link_sertifikat || `https://drive.google.com/file/d/sample_certificate_${Math.random().toString(36).substr(2, 9)}/view`;
                                item.downloaded = item.downloaded || 'false';
                            }
                            
                            return hasValidData;
                        });
                    }
                } catch (csvError) {
                    console.log('CSV method failed:', csvError.message);
                }
                
                // Create sample certificate data if no data found (for testing)
                if (sertifikat.length === 0) {
                    sertifikat = [
                        {
                            'Nama Lengkap': 'Ibu Sari Dewi',
                            'Email': 'sari.dewi@sdn2palapi.sch.id',
                            'Instansi': 'SDN 2 Palapi',
                            'No. HP': '081234567890',
                            'link_sertifikat': 'https://drive.google.com/file/d/sample1/view',
                            'downloaded': 'true',
                            'timestamp': new Date().toISOString()
                        },
                        {
                            'Nama Lengkap': 'Pak Ahmad Rizki',
                            'Email': 'ahmad.rizki@sdn2palapi.sch.id',
                            'Instansi': 'SDN 2 Palapi',
                            'No. HP': '081234567891',
                            'link_sertifikat': 'https://drive.google.com/file/d/sample2/view',
                            'downloaded': 'false',
                            'timestamp': new Date().toISOString()
                        },
                        {
                            'Nama Lengkap': 'Ibu Maya Sari',
                            'Email': 'maya.sari@sdn2palapi.sch.id',
                            'Instansi': 'SDN 2 Palapi',
                            'No. HP': '081234567892',
                            'link_sertifikat': 'https://drive.google.com/file/d/sample3/view',
                            'downloaded': 'false',
                            'timestamp': new Date().toISOString()
                        }
                    ];
                }
                
                // Certificate data is loaded but not displayed in a list anymore
                // Data is only used for search functionality
                
            } catch (error) {
                console.log('Error loading certificates:', error);
                // Certificate data loading error - only affects search functionality
            }
        }

        // Presensi form submission
        document.getElementById('daftar-form').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const submitBtn = e.target.querySelector('button[type="submit"]');
            const originalText = submitBtn.innerHTML;
            const successMessage = document.getElementById('success-message');
            const errorMessage = document.getElementById('error-message');
            const errorText = document.getElementById('error-text');
            
            // Hide any previous messages
            successMessage.classList.add('hidden');
            errorMessage.classList.add('hidden');
            
            // Show loading state
            submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin mr-2"></i>Mengirim...';
            submitBtn.disabled = true;
            
            try {
                const formData = new FormData(e.target);
                const data = Object.fromEntries(formData);
                
                // Validate required fields
                const requiredFields = ['Nama Lengkap', 'Instansi', 'Email', 'No. HP'];
                const missingFields = requiredFields.filter(field => !data[field] || !data[field].trim());
                
                if (missingFields.length > 0) {
                    errorText.textContent = `Mohon lengkapi field: ${missingFields.join(', ')}`;
                    errorMessage.classList.remove('hidden');
                    return;
                }
                
                // Validate email format
                const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
                if (!emailRegex.test(data['Email'])) {
                    errorText.textContent = 'Format email tidak valid';
                    errorMessage.classList.remove('hidden');
                    return;
                }
                
                // Submit to Google Sheets
                const result = await submitToGoogleSheets(data, 'Peserta');
                
                if (result.status === 'success') {
                    successMessage.classList.remove('hidden');
                    e.target.reset();
                    
                    // Reload participant data after a short delay
                    setTimeout(() => {
                        loadPeserta();
                    }, 2000);
                    
                    // Hide success message after 8 seconds
                    setTimeout(() => {
                        successMessage.classList.add('hidden');
                    }, 8000);
                } else {
                    errorText.textContent = result.message || 'Terjadi kesalahan saat mengirim presensi. Silakan coba lagi.';
                    errorMessage.classList.remove('hidden');
                }
                
            } catch (error) {
                console.log('Presensi form submission error:', error);
                errorText.textContent = 'Terjadi kesalahan koneksi. Silakan coba lagi.';
                errorMessage.classList.remove('hidden');
            } finally {
                // Reset button
                submitBtn.innerHTML = originalText;
                submitBtn.disabled = false;
            }
        });

        // Project form submission
        document.getElementById('proyek-form').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const submitBtn = e.target.querySelector('button[type="submit"]');
            const originalText = submitBtn.innerHTML;
            
            // Show loading state
            submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin mr-2"></i>Mengupload...';
            submitBtn.disabled = true;
            
            // Remove any existing messages
            const existingMessages = e.target.parentNode.querySelectorAll('.success-message, .error-message');
            existingMessages.forEach(msg => msg.remove());
            
            try {
                // Get form data
                const formData = new FormData(e.target);
                const rawData = Object.fromEntries(formData);
                
                // Validate required fields
                const requiredFields = ['judul', 'nama_guru', 'deskripsi', 'link_karya'];
                const missingFields = [];
                
                requiredFields.forEach(field => {
                    const value = rawData[field];
                    if (!value || !value.trim() || value.trim() === '') {
                        missingFields.push(field);
                    }
                });
                
                if (missingFields.length > 0) {
                    const fieldNames = {
                        'judul': 'Judul Karya',
                        'nama_guru': 'Nama Guru', 
                        'deskripsi': 'Deskripsi',
                        'link_karya': 'Link Karya'
                    };
                    const missingFieldNames = missingFields.map(f => fieldNames[f] || f);
                    throw new Error(`Mohon lengkapi field: ${missingFieldNames.join(', ')}`);
                }
                
                // Map form data to exact Google Sheets column names
                const projectData = {
                    'Judul Karya': rawData.judul.toString().trim(),
                    'Nama Guru': rawData.nama_guru.toString().trim(),
                    'Deskripsi': rawData.deskripsi.toString().trim(),
                    'Link Karya': rawData.link_karya.toString().trim(),
                    'Kategori': (rawData.kategori || 'Umum').toString().trim()
                };
                
                // Submit to Google Sheets
                const result = await submitToGoogleSheets(projectData, 'Proyek Peserta');
                
                if (result.status === 'success') {
                    // Show success message
                    const successDiv = document.createElement('div');
                    successDiv.className = 'success-message mt-6 p-4 bg-canva-green/20 border border-canva-green text-canva-green rounded-lg animate-bounce-in';
                    successDiv.innerHTML = `
                        <div class="flex items-center">
                            <i class="fas fa-check-circle mr-3 text-xl"></i>
                            <div>
                                <div class="font-semibold">Karya Berhasil Diupload! 🎉</div>
                                <div class="text-sm mt-1">Karya Anda akan segera muncul di galeri</div>
                            </div>
                        </div>
                    `;
                    
                    e.target.parentNode.insertBefore(successDiv, e.target.nextSibling);
                    e.target.reset();
                    
                    // Reload project gallery with delay
                    setTimeout(() => {
                        loadProyek();
                    }, 3000);
                    
                    // Remove success message after 8 seconds
                    setTimeout(() => {
                        if (successDiv.parentNode) {
                            successDiv.remove();
                        }
                    }, 8000);
                    
                } else {
                    throw new Error(result.message || 'Gagal mengupload karya. Silakan coba lagi.');
                }
                
            } catch (error) {
                console.log('Project form submission error:', error);
                
                // Show error message
                const errorDiv = document.createElement('div');
                errorDiv.className = 'error-message mt-6 p-4 bg-canva-orange/20 border border-canva-orange text-canva-orange rounded-lg animate-bounce-in';
                errorDiv.innerHTML = `
                    <div class="flex items-center">
                        <i class="fas fa-exclamation-triangle mr-3 text-xl"></i>
                        <div>
                            <div class="font-semibold">Gagal Mengupload Karya</div>
                            <div class="text-sm mt-1">${error.message}</div>
                        </div>
                    </div>
                `;
                
                e.target.parentNode.insertBefore(errorDiv, e.target.nextSibling);
                
                // Remove error message after 8 seconds
                setTimeout(() => {
                    if (errorDiv.parentNode) {
                        errorDiv.remove();
                    }
                }, 8000);
                
            } finally {
                // Reset button state
                submitBtn.innerHTML = originalText;
                submitBtn.disabled = false;
            }
        });

        // Certificate search form submission
        document.getElementById('sertifikat-form').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const submitBtn = e.target.querySelector('button[type="submit"]');
            const originalText = submitBtn.innerHTML;
            const formData = new FormData(e.target);
            const searchTerm = formData.get('search');
            
            const resultDiv = document.getElementById('sertifikat-result');
            const notFoundDiv = document.getElementById('sertifikat-not-found');
            
            // Hide previous results
            resultDiv.classList.add('hidden');
            notFoundDiv.classList.add('hidden');
            
            // Show loading state
            submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin mr-2"></i>Mencari...';
            submitBtn.disabled = true;
            
            try {
                let sertifikat = [];
                
                // Try to get certificate data from participant data
                try {
                    const response = await fetch(SHEETS_CSV_URL, {
                        method: 'GET',
                        mode: 'cors',
                        headers: {
                            'Accept': 'text/csv',
                        }
                    });
                    
                    if (response.ok) {
                        const csvText = await response.text();
                        const allData = parseCSV(csvText);
                        
                        // Use participant data as certificate data
                        sertifikat = allData.filter(item => {
                            const hasValidData = (
                                (item['Nama Lengkap'] || item.nama) &&
                                (item['Email'] || item.email)
                            );
                            
                            if (hasValidData) {
                                // Add certificate-specific fields if not present
                                item.link_sertifikat = item.link_sertifikat || `https://drive.google.com/file/d/sample_certificate_${Math.random().toString(36).substr(2, 9)}/view`;
                                item.downloaded = item.downloaded || 'false';
                            }
                            
                            return hasValidData;
                        });
                    }
                } catch (csvError) {
                    console.log('CSV fallback failed for search:', csvError.message);
                }
                
                // Use sample data if no data found
                if (sertifikat.length === 0) {
                    sertifikat = [
                        {
                            'Nama Lengkap': 'Ibu Sari Dewi',
                            'Email': 'sari.dewi@sdn2palapi.sch.id',
                            'Instansi': 'SDN 2 Palapi',
                            'link_sertifikat': 'https://drive.google.com/file/d/sample1/view',
                            'downloaded': 'true'
                        },
                        {
                            'Nama Lengkap': 'Pak Ahmad Rizki',
                            'Email': 'ahmad.rizki@sdn2palapi.sch.id',
                            'Instansi': 'SDN 2 Palapi',
                            'link_sertifikat': 'https://drive.google.com/file/d/sample2/view',
                            'downloaded': 'false'
                        },
                        {
                            'Nama Lengkap': 'Ibu Maya Sari',
                            'Email': 'maya.sari@sdn2palapi.sch.id',
                            'Instansi': 'SDN 2 Palapi',
                            'link_sertifikat': 'https://drive.google.com/file/d/sample3/view',
                            'downloaded': 'false'
                        }
                    ];
                }
                
                // Enhanced field mapping for search
                const getFieldValue = (item, possibleNames) => {
                    for (let name of possibleNames) {
                        if (item[name] && String(item[name]).trim() && String(item[name]).trim() !== '-') {
                            return String(item[name]).trim();
                        }
                    }
                    
                    const itemKeys = Object.keys(item);
                    for (let searchTerm of possibleNames) {
                        const foundKey = itemKeys.find(key => 
                            key.toLowerCase().includes(searchTerm.toLowerCase()) ||
                            searchTerm.toLowerCase().includes(key.toLowerCase())
                        );
                        if (foundKey && item[foundKey] && String(item[foundKey]).trim() && String(item[foundKey]).trim() !== '-') {
                            return String(item[foundKey]).trim();
                        }
                    }
                    
                    return '';
                };
                
                // Search for certificate
                const found = sertifikat.find(item => {
                    const nama = getFieldValue(item, ['Nama Lengkap', 'nama', 'name', 'Nama']);
                    const email = getFieldValue(item, ['Email', 'email', 'e-mail']);
                    
                    const searchLower = searchTerm.toLowerCase();
                    const namaMatch = nama && nama.toLowerCase().includes(searchLower);
                    const emailMatch = email && email.toLowerCase().includes(searchLower);
                    
                    return namaMatch || emailMatch;
                });
                
                if (found) {
                    const nama = getFieldValue(found, ['Nama Lengkap', 'nama', 'name', 'Nama']);
                    const email = getFieldValue(found, ['Email', 'email', 'e-mail']);
                    const instansi = getFieldValue(found, ['Instansi', 'instansi', 'sekolah', 'Sekolah']);
                    const linkSertifikat = getFieldValue(found, ['link_sertifikat', 'Link Sertifikat', 'url_sertifikat', 'certificate_link']);
                    
                    resultDiv.innerHTML = `
                        <div class="p-4 bg-canva-green/20 border border-canva-green text-canva-green rounded-lg animate-bounce-in">
                            <h3 class="font-bold mb-3">
                                <i class="fas fa-check-circle mr-2"></i>
                                Sertifikat Ditemukan!
                            </h3>
                            <div class="mb-4 space-y-2">
                                <p><strong>Nama:</strong> ${nama}</p>
                                <p><strong>Email:</strong> ${email}</p>
                                ${instansi ? `<p><strong>Instansi:</strong> ${instansi}</p>` : ''}
                            </div>
                            ${linkSertifikat ? 
                                `<a href="${linkSertifikat.startsWith('http') ? linkSertifikat : 'https://' + linkSertifikat}" target="_blank" class="inline-block bg-gradient-to-r from-canva-blue to-canva-purple text-white px-4 py-2 rounded-lg hover:shadow-lg transition-all transform hover:scale-105">
                                    <i class="fas fa-download mr-2"></i>
                                    Unduh Sertifikat
                                </a>` :
                                `<div class="inline-block bg-gray-300 text-gray-600 px-4 py-2 rounded-lg cursor-not-allowed">
                                    <i class="fas fa-link-slash mr-2"></i>
                                    Link Sertifikat Belum Tersedia
                                </div>`
                            }
                        </div>
                    `;
                    resultDiv.classList.remove('hidden');
                    notFoundDiv.classList.add('hidden');
                } else {
                    resultDiv.classList.add('hidden');
                    notFoundDiv.classList.remove('hidden');
                }
                
            } catch (error) {
                console.log('Error during certificate search:', error);
                resultDiv.innerHTML = `
                    <div class="p-4 bg-canva-orange/20 border border-canva-orange text-canva-orange rounded-lg animate-bounce-in">
                        <i class="fas fa-exclamation-triangle mr-2"></i>
                        Terjadi kesalahan saat mencari sertifikat. Silakan coba lagi.
                    </div>
                `;
                resultDiv.classList.remove('hidden');
                notFoundDiv.classList.add('hidden');
            } finally {
                // Reset button
                submitBtn.innerHTML = originalText;
                submitBtn.disabled = false;
            }
        });

        // Update current date and time
        function updateDateTime() {
            const now = new Date();
            
            // Update date
            const dateOptions = {
                weekday: 'long',
                year: 'numeric',
                month: 'long',
                day: 'numeric',
                timeZone: 'Asia/Jakarta'
            };
            const formattedDate = now.toLocaleDateString('id-ID', dateOptions);
            document.getElementById('current-date').textContent = formattedDate;
            
            // Update time
            const timeOptions = {
                hour: '2-digit',
                minute: '2-digit',
                second: '2-digit',
                timeZone: 'Asia/Jakarta'
            };
            const formattedTime = now.toLocaleTimeString('id-ID', timeOptions) + ' WIB';
            document.getElementById('current-time').textContent = formattedTime;
        }

        // Initialize page on load
        document.addEventListener('DOMContentLoaded', function() {
            // Show home page by default
            showPage('beranda');
            
            // Update date and time immediately and then every second
            updateDateTime();
            setInterval(updateDateTime, 1000);
            
            // Pre-load critical data in background
            setTimeout(() => {
                loadPeserta();
            }, 2000);
            
            setTimeout(() => {
                loadProyek();
            }, 4000);
        });
    </script>
<script>(function(){function c(){var b=a.contentDocument||a.contentWindow.document;if(b){var d=b.createElement('script');d.innerHTML="window.__CF$cv$params={r:'96a79e91f513ce5e',t:'MTc1NDQxMDgwMS4wMDAwMDA='};var a=document.createElement('script');a.nonce='';a.src='/cdn-cgi/challenge-platform/scripts/jsd/main.js';document.getElementsByTagName('head')[0].appendChild(a);";b.getElementsByTagName('head')[0].appendChild(d)}}if(document.body){var a=document.createElement('iframe');a.height=1;a.width=1;a.style.position='absolute';a.style.top=0;a.style.left=0;a.style.border='none';a.style.visibility='hidden';document.body.appendChild(a);if('loading'!==document.readyState)c();else if(window.addEventListener)document.addEventListener('DOMContentLoaded',c);else{var e=document.onreadystatechange||function(){};document.onreadystatechange=function(b){e(b);'loading'!==document.readyState&&(document.onreadystatechange=e,c())}}}})();</script></body>
</html>
